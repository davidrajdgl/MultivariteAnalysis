qqplot(data)
library(readxl)
orig.data = read_excel("crossSecData.xlsx")
data = orig.data[,c(1,3,4,5,6,7)]
qplot(data)
library(readxl)
orig.data = read_excel("crossSecData.xlsx")
data = orig.data[,c(1,3,4,5,6,7)]
qqnorm(data)
library(readxl)
orig.data = read_excel("crossSecData.xlsx")
data = as.data.frame(orig.data[,c(1,3,4,5,6,7)])
qqnorm(data)
library(readxl)
orig.data = read_excel("crossSecData.xlsx")
data = as.data.frame(orig.data[,c(3,4,5,6,7)])
qqnorm(data)
library(readxl)
orig.data = read_excel("crossSecData.xlsx")
data = as.data.frame(orig.data[,c(3,4,5,6,7)])
head(data)
install.packages("MVN")
library(MVN)
mvn(data = data, mvnTest = "hz" , multivariateOutlierMethod = "quan" )
dat = data.frame("height" = sample(100, 45:65))
dat = data.frame("height" = sample(100, 45:65))
head(dat)
dat = data.frame("height" = sample(100, 45:65))
head(dat)
?sample
?sample
dat = data.frame("height" = sample(45:65, size = 100, replace = FALSE)
head(dat)
dat = data.frame("height" = sample(45:65, size = 100, replace = FALSE))
dat = data.frame("height" = sample(45:65, size = 100, replace = TRUE))
head(dat)
?sample
dat = data.frame("Height" = sample(45:65, size = 100, replace = TRUE),
"Weight" = sample(145:175, size = 100, replace = TRUE))
head(dat)
dat = data.frame("Height" = sample(45:65, size = 100, replace = TRUE),
"Weight" = sample(145:175, size = 100, replace = TRUE),
"SBP"    = rnorm(100, 100, 10))
head(dat)
dat = data.frame("Height" = sample(45:65, size = 100, replace = TRUE),
"Weight" = sample(145:175, size = 100, replace = TRUE),
"SBP"    = rnorm(100, 130, 10),
"DBP"    = rnorm(100, 90, 10)
)
head(dat)
library(MVN)
mvn(data = dat, mvnTest = "hz" , multivariateOutlierMethod = "quan" )
set.seed(100)
data = data.frame("Height" = sample(45:65, size = 100, replace = TRUE),
"Weight" = sample(145:175, size = 100, replace = TRUE),
"SBP"    = rnorm(100, 130, 10),
"DBP"    = rnorm(100, 90, 10)
)
head(data)
mahalanobis(data, center = colMeans(data), cov = cov(data))
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
chisquare = NULL
for (j in 1:nrow(data)){
k = (n-j+2)/n
chisquare[j] = qchisq(k,df = ncol(data))
}
chisquare = NULL
for (j in 1:nrow(data)){
n = nrow(data)
k = (n-j+2)/n
chisquare[j] = qchisq(k,df = ncol(data))
}
chisquare = NULL
for (j in 1:nrow(data)){
n = nrow(data)
df =  ncol(data)
k = (n-j+2)/n
chisquare[j] = qchisq(k,df = df)
}
chisquare = NULL
for (j in 1:nrow(data)){
n = nrow(data)
df =  ncol(data)
k = (n-j+2)/n
chisquare[j] = qchisq(k,df = df)
}
chisquare
chisquare = NULL
for (j in 1:nrow(data)){
n = nrow(data)
df =  ncol(data)
k = (n-j+1/2)/n
chisquare[j] = qchisq(k,df = df)
}
chisquare
plot(data$mahalanobis, chisquare)
plot(chisquare,data$mahalanobis)
chisquare = NULL
for (j in 1:nrow(data)){
n = nrow(data)
df =  ncol(data)
k = (j-1/2)/n
chisquare[j] = qchisq(k,df = df)
}
chisquare
chisquare = NULL
for (j in 1:nrow(data)){
n = nrow(data)
df =  ncol(data)
k = (j+1/2)/n
chisquare[j] = qchisq(k,df = df)
}
chisquare
chisquare = NULL
for (j in 1:nrow(data)){
n = nrow(data)
df =  ncol(data)
k = (j-1/2)/n
chisquare[j] = qchisq(k,df = df)
}
chisquare
chisquare = NULL
for (j in 1:nrow(data)){
n = nrow(data)
df =  ncol(data)
k = (n-j-1/2)/n
chisquare[j] = qchisq(k,df = df)
}
chisquare
chisquare = NULL
for (j in 1:nrow(data)){
n = nrow(data)
df =  ncol(data)
k = (n-j+1/2)/n
chisquare[j] = qchisq(k,df = df)
}
chisquare
chisquare = NULL
for (j in 1:nrow(data)){
n = nrow(data)
df =  ncol(data)
k = (j-1/2)/n
chisquare[j] = qchisq(k,df = df)
}
chisquare
plot(chisquare,data$mahalanobis)
chisquare = NULL
for (j in 1:nrow(data)){
n = nrow(data)
df =  ncol(data)
k = (n-j+1/2)/n
chisquare[j] = qchisq(k,df = df)
}
chisquare
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = cov(data)
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = cov(data)
S
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = cov(data[,c(1,2,3,4)])
S
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = cov(data[,c(1,2,3,4)])
solve(S)
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = cov(data[,c(1,2,3,4)])
solve(S)
data[i]
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = cov(data[,c(1,2,3,4)])
solve(S)
data[i,]
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = cov(data[,c(1,2,3,4)])
solve(S)
data[i,c(1,2,3,4)]
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = cov(data[,c(1,2,3,4)])
solve(S)
data[1,c(1,2,3,4)]
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = cov(data[,c(1,2,3,4)])
solve(S)
data[1,c(1,2,3,4)] - colMeans(data[,c(1,2,3,4)])
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = cov(data[,c(1,2,3,4)])
solve(S)
centered = data[1,c(1,2,3,4)] - colMeans(data[,c(1,2,3,4)])
t(centered) %*% solve(S) %*% centered
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = cov(data[,c(1,2,3,4)])
solve(S)
centered = data[1,c(1,2,3,4)] - colMeans(data[,c(1,2,3,4)])
centered %*% solve(S) %*% centered
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = cov(data[,c(1,2,3,4)])
solve(S)
centered = data[1,c(1,2,3,4)] - colMeans(data[,c(1,2,3,4)])
centered %*% solve(S) %*% t(centered)
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = cov(data[,c(1,2,3,4)])
solve(S)
centered = data[1,c(1,2,3,4)] - colMeans(data[,c(1,2,3,4)])
as.vector(centered) %*% solve(S) %*% as.vector(centered)
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = as.matrix(cov(data[,c(1,2,3,4)]))
solve(S)
centered = data[1,c(1,2,3,4)] - colMeans(data[,c(1,2,3,4)])
as.vector(centered) %*% solve(S) %*% as.vector(centered)
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = as.matrix(cov(data[,c(1,2,3,4)]))
solve(S)
centered = data[1,c(1,2,3,4)] - colMeans(data[,c(1,2,3,4)])
solve(S) %*% as.vector(centered)
centered
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = as.matrix(cov(data[,c(1,2,3,4)]))
solve(S)
centered = data[1,c(1,2,3,4)] - colMeans(data[,c(1,2,3,4)])
solve(S) %*% as.vector(centered)
t(centered)%*%centered
centered = as.vector(data[1,c(1,2,3,4)] - colMeans(data[,c(1,2,3,4)]))
t(centered)%*%centered
(centered)%*%centered
centered%*%centered
centered
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = as.matrix(cov(data[,c(1,2,3,4)]))
solve(S)
centered = as.vector(data[1,c(1,2,3,4)] - colMeans(data[,c(1,2,3,4)]))
solve(S) %*% as.vector(centered)
as.vector(centered)
as.vector(centered)
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = as.matrix(cov(data[,c(1,2,3,4)]))
solve(S)
centered = as.vector(data[1,c(1,2,3,4)] - colMeans(data[,c(1,2,3,4)]))
solve(S) %*% as.vector(centered)
as.numeric(centered)
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = as.matrix(cov(data[,c(1,2,3,4)]))
solve(S)
centered = as.vector(data[1,c(1,2,3,4)] - colMeans(data[,c(1,2,3,4)]))
solve(S) %*% as.numeric(centered)
centered%*%centered
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = as.matrix(cov(data[,c(1,2,3,4)]))
solve(S)
centered = as.vector(data[1,c(1,2,3,4)] - colMeans(data[,c(1,2,3,4)]))
solve(S) %*% as.numeric(centered)
t(centered)%*%centered
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = as.matrix(cov(data[,c(1,2,3,4)]))
solve(S)
centered = as.numeric(data[1,c(1,2,3,4)] - colMeans(data[,c(1,2,3,4)]))
solve(S) %*% as.numeric(centered)
t(centered)%*%centered
as.numeric(centered)
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = as.matrix(cov(data[,c(1,2,3,4)]))
solve(S)
centered = as.numeric(data[1,c(1,2,3,4)] - colMeans(data[,c(1,2,3,4)]))
t(centered)%*% solve(S) %*% centered
%*%centered
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
maha = NULL
S = as.matrix(cov(data[,c(1,2,3,4)]))
solve(S)
centered = as.numeric(data[1,c(1,2,3,4)] - colMeans(data[,c(1,2,3,4)]))
t(centered)%*% solve(S) %*% centered
maha = NULL
S = as.matrix(cov(data[,c(1,2,3,4)]))
solve(S)
centered = as.numeric(data[1,c(1,2,3,4)] - colMeans(data[,c(1,2,3,4)]))
t(centered)%*% solve(S) %*% centered
maha = NULL
S = as.matrix(cov(data[,c(1,2,3,4)]))
centered = as.numeric(data[1,c(1,2,3,4)] - colMeans(data[,c(1,2,3,4)]))
t(centered)%*% solve(S) %*% centered
data$mahalanobis = mahalanobis(data, center = colMeans(data), cov = cov(data))
head(data)
nrow(data)
nrow(data)
qchisq(1/(2*100), df = 4)
nrow(data)
qchisq((100-1/2)/(100), df = 4)
(100-1/2)/(100)
qchisq((100-1/2)/(100), df = 4)
nrow(data)
pchisq((100-1/2)/(100), df = 4)
nrow(data)
pchisq((1-1/2)/(100), df = 4)
nrow(data)
pchisq((100-1+1/2)/(100), df = 4)
nrow(data)
pchisq((100-1+1/2)/(100), df = 4,lower.tail = FALSE)
chisquare = NULL
for (j in 1:nrow(data)){
n = nrow(data)
df =  4
k = (n-j+1/2)/n
chisquare[j] = pchisq(k,df = df,lower.tail = FALSE)
}
chisquare
plot(chisquare,data$mahalanobis)
chisquare = NULL
for (j in 1:nrow(data)){
n = nrow(data)
df =  4
k = (n-j+1/2)/n
chisquare[j] = pchisq(k,df = df)
}
chisquare
plot(chisquare,data$mahalanobis)
chisquare = NULL
for (j in 1:nrow(data)){
n = nrow(data)
df =  4
k = (n-j+1/2)/n
chisquare[j] = qchisq(k,df = df,,lower.tail = FALSE)
}
chisquare
plot(chisquare,data$mahalanobis)
chisquare = NULL
for (j in 1:nrow(data)){
n = nrow(data)
df =  4
k = (n-j+1/2)/n
chisquare[j] = invchik,df = df,,lower.tail = FALSE)
plot(chisquare,sort(data$mahalanobis))
plot(chisquare,data$mahalanobis)
chisquare = NULL
for (j in 1:nrow(data)){
n = nrow(data)
df =  4
k = (n-j+1/2)/n
chisquare[j] = invchi(k,df = df,,lower.tail = FALSE)
}
chisquare = NULL
for (j in 1:nrow(data)){
n = nrow(data)
df =  4
k = (n-j+1/2)/n
chisquare[j] = qchisq(k,df = df,lower.tail = FALSE)
}
chisquare
plot(chisquare,data$mahalanobis)
plot(chisquare,sort(data$mahalanobis))
plot(chisquare,sort(data$mahalanobis), xmin = 0)
plot(chisquare,sort(data$mahalanobis), xlim = c(0,15), ylim = c(0,15))
chisquare = NULL
for (j in 1:nrow(data)){
n = nrow(data)
df =  4
k = (n-j+1/2)/n
chisquare[j] = qchisq(k,df = 4)
}
chisquare
plot(chisquare,sort(data$mahalanobis), xlim = c(0,15), ylim = c(0,15))
chisquare = NULL
for (j in 1:nrow(data)){
n = nrow(data)
df =  4
k = (n-j+1/2)/n
chisquare[j] = qchisq(k,df = 4,lower.tail = FALSE)
}
chisquare
plot(chisquare,sort(data$mahalanobis), xlim = c(0,15), ylim = c(0,15))
sort(data$mahalanobis)
Stat.dist = mahalanobis(data, center = colMeans(data), cov = cov(data))
Stat.dist = sort(Stat.dist)
head(Stat.dist)
Stat.dist = mahalanobis(data, center = colMeans(data), cov = cov(data))
Stat.dist = sort(Stat.dist)
Stat.dist
theo.quant = NULL
for (j in 1:nrow(data)){
n = nrow(data)
df =  4
k = (n-j+1/2)/n
theo.quant[j] = qchisq(k,df = 4,lower.tail = FALSE)
}
theo.quant
plot(Stat.dist,theo.quant, xlim = c(0,15), ylim = c(0,15))
plot(Stat.dist,theo.quant, xlim = c(0,15), ylim = c(0,15))
abline(lm(Stat.dist~theo.quant))
plot(Stat.dist,theo.quant, xlim = c(0,15), ylim = c(0,15))
qqline(Stat.dist)
?abline
plot(Stat.dist,theo.quant, xlim = c(0,15), ylim = c(0,15))
abline(1,1)
plot(Stat.dist,theo.quant, xlim = c(0,15), ylim = c(0,15))
abline(-1,1)
plot(Stat.dist,theo.quant, xlim = c(0,15), ylim = c(0,15))
abline(-.5,1)
plot(Stat.dist,theo.quant, xlim = c(0,15), ylim = c(0,15))
abline(-.6,1)
plot(Stat.dist,theo.quant, xlim = c(0,15), ylim = c(0,15))
abline(-.55,1)
library(MVN)
mvn(data = dat, mvnTest = "hz" , multivariateOutlierMethod = "quan" )
library(MVN)
mvn(data = dat, multivariateOutlierMethod = "quan" )
library(MVN)
mvn(data = data, multivariateOutlierMethod = "quan" )
plot(theo.quant,Stat.dist,
xlim = c(0,15), ylim = c(0,15),
xlab = "Theorectical Quantile",
ylab = "Statistical Distance (Mahalanobis Distance)")
plot(theo.quant,Stat.dist,
xlim = c(0,15), ylim = c(0,15),
xlab = "Theorectical Quantile",
ylab = "Statistical Distance (Mahalanobis Distance)")
plot(Stat.dist~theo.quant
xlim = c(0,15), ylim = c(0,15),
plot(Stat.dist~theo.quant,
xlim = c(0,15), ylim = c(0,15),
ylab = "Theorectical Quantile",
xlab = "Statistical Distance (Mahalanobis Distance)",
pch = 16)
plot(Stat.dist~theo.quant,
xlim = c(0,15), ylim = c(0,15),
ylab = "Theorectical Quantile",
xlab = "Statistical Distance (Mahalanobis Distance)",
pch = 16)
library(MVN)
mvn(data = data, multivariateOutlierMethod = "quan" , xlim ="0,15")
library(MVN)
mvn(data = data, multivariateOutlierMethod = "quan" , xlim =c(0,15))
library(MVN)
mvn(data = data, multivariateOutlierMethod = "quan")
library(MVN)
mvn(data = data, multivariateOutlierMethod = "quan")
library(MVN)
mvn(data = data,mvnTest = c("mardia", "hz", "royston", "dh",
"energy"), multivariateOutlierMethod = "quan")
library(MVN)
mvn(data = data,mvnTest = "hz", multivariateOutlierMethod = "quan")
head(data)
set.seed(100)
data = data.frame("Height" = sample(45:65, size = 100, replace = TRUE),
"Weight" = sample(145:175, size = 100, replace = TRUE),
"SBP"    = rnorm(100, 130, 10),
"DBP"    = rnorm(100, 90, 10)
)
head(data)
head(data)
library(MVN)
mvn(data = data,mvnTest = "hz", multivariateOutlierMethod = "quan")
library('datasets')
head(iris)
library('datasets')
head('iris')
library('datasets')
?datasets
head(iris)
library('datasets')
library(help = "datasets")
library('datasets')
head(AirPassengers)
library('datasets')
head(iris)
library('datasets')
head(mtcars)
